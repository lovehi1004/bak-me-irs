<?xml version="1.0" encoding="UTF-8"?>
<Configuration>

	<Properties>
		<Property name="system">irs</Property><!-- 시스템구분 -->
		<Property name="basePath">/data/log/tomcat</Property><!-- 서비스로그 기준 경로 -->
		<Property name="standard">stdout</Property><!-- 서비스로그 -->
		<Property name="error">stderr</Property><!-- 에러로그 -->
		<Property name="fileMaxSize">500MB</Property><!-- 로그파일용량 -->
		<!-- pattern : [https://logging.apache.org/log4j/2.x/manual/layouts.html] -->
		<Property name="layoutPattern">[%-5p] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] [%C{1.}.%M:%L] - %m%n</Property><!-- 출력형식 -->
	</Properties>
	<Appenders>
		<!-- 콘솔 -->
		<Console name="console" target="SYSTEM_OUT">
			<PatternLayout pattern="${layoutPattern}" />
		</Console>
		<!-- 서비스로그 -->
		<RollingFile name="standardFile" fileName="${basePath}/${system}/${standard}.log" filePattern="${basePath}/${system}/logs/${standard}_%d{yyyy-MM-dd}_%i.log" filePermissions="rw-rw-r--">
			<PatternLayout pattern="${layoutPattern}" />
			<Policies>
				<SizeBasedTriggeringPolicy size="${fileMaxSize}" /><!-- 용량초과시 순번부여 -->
				<TimeBasedTriggeringPolicy modulate="true" interval="1" /><!-- 일별 로그파일 생성 -->
			</Policies>
			<DefaultRolloverStrategy max="9999" fileIndex="min" /><!-- 파일 500개 까지 생성 -->
		</RollingFile>
		<!-- 에러로그 -->
		<RollingFile name="errorFile" fileName="${basePath}/${system}/${error}.log" filePattern="${basePath}/${system}/logs/${error}_%d{yyyy-MM-dd}_%i.log" filePermissions="rw-rw-r--">
			<PatternLayout pattern="${layoutPattern}" />
			<Policies>
				<SizeBasedTriggeringPolicy size="${fileMaxSize}" /><!-- 용량초과시 순번부여 -->
				<TimeBasedTriggeringPolicy modulate="true" interval="1" /><!-- 일별 로그파일 생성 -->
			</Policies>
			<DefaultRolloverStrategy max="9999" fileIndex="min" /><!-- 파일 500개 까지 생성 -->
		</RollingFile>

	</Appenders>


	<Loggers>
		<Logger name="org.springframework" level="ERROR" />
		<Logger name="org.apache.commons.digester" level="OFF" />
		<Logger name="com.zaxxer.hikari" level="ERROR" />
		<Logger name="org.hibernate" level="OFF" />
		<Logger name="jdbc" level="OFF" />
		<Logger name="jdbc.sqlonly" level="INFO" />
		<Logger name="jdbc.audit" level="OFF" />
		<Logger name="jdbc.resultset" level="OFF" />
		<Logger name="jdbc.resultsettable" level="INFO" />
		<Logger name="jdbc.connection" level="OFF" />
		
		<!-- 암호화 솔루션 -->
		<Logger name="com.initech.safedb" level="DEBUG" />
		
		<!-- 넥사크로 로그 START -->
		<!-- 
			* 로그 출력 확인 클래스
			com.nexacro.uiadapter.spring.core.data.convert.NexacroConverterFactory
			com.nexacro.uiadapter.spring.core.data.support.NexacroBeanWrapper
			com.nexacro.uiadapter.spring.core.resolve.NexacroHandlerMethodReturnValueHandler
			com.nexacro.java.xapi.data.VariableList
			com.nexacro.java.xapi.data.DataSetList
			com.nexacro.java.xapi.tx.HttpPlatformResponse
			com.nexacro.java.xapi.tx.PlatformRequest
			com.nexacro.java.xapi.tx.PlatformResponse
			com.nexacro.java.xapi.tx.impl.PlatformJsonDataSerializer
		 -->
		<Logger name="com.nexacro.uiadapter.spring.core" level="ERROR" />
		<Logger name="com.nexacro.java.xapi" level="DEBUG" />
		<!-- 넥사크로 로그 END -->
		
		<Logger name="com.raonwiz.kupload.util.CommonUtils" level="DEBUG" />

		<Root level="DEBUG" additivity="false">
			<AppenderRef ref="console" />
			<AppenderRef ref="standardFile" />
			<AppenderRef ref="errorFile" level="ERROR" />
		</Root>
	</Loggers>


</Configuration>


