<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gov.me.irs.core.user.mapper.UserMapper">
	
	<!-- 권한 목록 조회 -->
	<select id="selectRoleList" resultType="egovMap" parameterType="map">
		/* UserMapper.selectRoleList */
		SELECT R.ROLE_ID_MGNO						/* 역할ID관리번호 */
			 , R.ROLE_NM							/* 역할명 */
		  FROM ROLE_BSC R
		 WHERE R.DEL_YN = 'N'
		   AND R.ROLE_ID_MGNO IN
			<foreach item="item" index="index" collection="roles" open="(" close=")" separator=",">
				#{item}
			</foreach>
		 ORDER BY R.ROLE_ID_MGNO
	</select>
	
	<!-- 사용자 조회 - 계정상태 및 기본정보 중 필요한 것만 -->
	<select id="selectUser" resultType="egovMap" parameterType="string">
		/* UserMapper.selectUser */
		SELECT ACNT_STTS_CL_CD					/* 계정상태구분코드 */
			 , INST_MGNO						/* 기관관리번호 */
			 , LGN_ID							/* 로그인ID */
			 , PSWD								/* 비밀번호 */
			 , USER_CL_CD						/* 사용자구분코드 */
			 , FLNM								/* 성명 */
		  FROM USER_BSC
		 WHERE DEL_YN = 'N'
		   AND USER_ID = #{userId}
	</select>
	
	<!-- 사용자 권한정보 삭제 -->
	<update id="deleteUserRole" parameterType="map">
		/* UserMapper.deleteUserRole */
		UPDATE USER_ROLE_DTL
		   SET DEL_YN = 'Y'
		     , MDFR_ID = #{sUserId}
		     , MDFCN_DT = CURRENT_TIMESTAMP
		 WHERE USER_ID = #{userId}
		   AND ROLE_ID_MGNO = #{roleIdMgno}
	</update>
	
	<!-- 사용자역할상세 등록 -->
	<insert id="insertUserRole" parameterType="map">
		<selectKey keyProperty="userRoleSn" resultType="int" order="BEFORE">
			/* UserMapper.insertUserRole.selectKey */
			SELECT COALESCE(MAX(USER_ROLE_SN), 0) + 1 FROM USER_ROLE_DTL
		</selectKey>
		/* UrmMapper.insertUserRole */
		INSERT
		  INTO USER_ROLE_DTL
		     ( USER_ID
		     , ROLE_ID_MGNO
		     , USER_ROLE_SN
		     , RGTR_ID
		     , REG_DT
		     )
		VALUES
		     ( #{userId}
		     , #{roleIdMgno}
		     , #{userRoleSn}
		     , #{sUserId}
		     , CURRENT_TIMESTAMP
		     )
	</insert>
	
	<!-- 사용자 권한정보 변경 -->
	<update id="updateUserRole" parameterType="map">
		/* UserMapper.updateUserRole */
		UPDATE USER_ROLE_DTL
		   SET ROLE_ID_MGNO = #{newRoleIdMgno}
		     , MDFR_ID = #{sUserId}
		     , MDFCN_DT = CURRENT_TIMESTAMP
		 WHERE DEL_YN = 'N'
		   AND USER_ID = #{userId}
		   AND ROLE_ID_MGNO = #{roleIdMgno}
	</update>
	
	<!-- 사용자 로그인실패건수 저장 -->
	<update id="updateUserLgnFailCnt" parameterType="gov.me.irs.core.client.vo.ClientVo">
		/* UserMapper.updateUserLgnFailCnt */
		UPDATE USER_BSC
		<if test='lgnScsYn != null and lgnScsYn.equals("Y")'><!-- 로그인성공시 실패건수 0 으로 UPDATE 처리 -->
		   SET LGN_FAIL_CNT = 0
		     , LGN_SCS_CNT = LGN_SCS_CNT + 1				/* 로그인성공횟수 */
		     , LAST_CNTN_DT = CURRENT_TIMESTAMP				/* 최종접속일시 */
		</if>
		<if test='lgnScsYn != null and lgnScsYn.equals("N")'><!-- 로그인성공시 실패건수 0 으로 UPDATE 처리 -->
		   SET LGN_FAIL_CNT = LGN_FAIL_CNT + 1
		     , LAST_LGN_FAIL_DT = CURRENT_TIMESTAMP				/* 최종로그인실패일자 */
		</if>
		     , MDFR_ID = 'SYSTEM'
		     , MDFCN_DT = CURRENT_TIMESTAMP
		 WHERE DEL_YN = 'N'
		   AND USER_ID = (
		   		SELECT U.USER_ID
		   		  FROM USER_BSC U
		   		 WHERE U.LGN_ID = #{username}
		   )
	</update>
	
	<!-- 사용자ID 채번 - USER_ID 채번 -->
	<select id="selectUserId" resultType="string">
		/* UserMapper.selectUserId */
		SELECT CONCAT( 'UR'
					 , LPAD( CAST(CAST(COALESCE(MAX(SUBSTRING(USER_ID, (2 + 1), 10)), '0') AS INTEGER) + 1 AS TEXT)
						   , 10 - 2
						   , '0'
					   )
			   )
		FROM USER_BSC
	</select>
	
	<!-- 사용자정보 생성 [USER_BSC] - 미승인상태 사용자 생성 -->
	<!-- 사용자관리에서 관리자직권으로 생성시 권한부여시점에 승인상태로 UPDATE처리 -->
	<insert id="insertUser" parameterType="map">
		/* UserMapper.insertUser */
		INSERT
		  INTO USER_BSC
			 ( USER_ID                  /* 사용자ID */
			 , INST_MGNO                /* 기관관리번호 */
			 , USER_CL_CD               /* 사용자구분코드 */
			 , LGN_ID                   /* 로그인ID */
			 , PSWD                     /* 비밀번호 */
			 , FLNM                     /* 성명 */
			 , DEPT_NM                  /* 부서명 */
			 , JBPS_NM                  /* 직위명 */
			 , TEL_DDD                  /* 전화지역번호 */
			 , TEL_TLPNO                /* 전화국번호 */
			 , TEL_PHINO                /* 전화개별번호 */
			 , HDPON_DDD                /* 핸드폰지역번호 */
			 , HDPON_TLPNO              /* 핸드폰국번호 */
			 , HDPON_PHINO              /* 핸드폰개별번호 */
			 , FAX_DDD                  /* 팩스지역번호 */
			 , FAX_TLPNO                /* 팩스국번호 */
			 , FAX_PHINO                /* 팩스개별번호 */
			 , EML_ID                   /* 이메일ID */
			 , EML_ADDR                 /* 이메일주소 */
			 , SMS_NTI_YN               /* sms알림여부 */
			 , ACNT_STTS_CL_CD          /* 계정상태구분코드 */
			 , DEL_YN                   /* 삭제여부 */
			 , RGTR_ID                  /* 등록자ID */
			 , REG_DT                   /* 등록일시 */
			 , UP_INST_MGNO             /* 상위기관관리번호 */
			 , LGN_FAIL_CNT             /* 로그인실패수 */
			 , LGN_SCS_CNT              /* 로그인성공수 */
			 )
		VALUES
			 ( #{userId}
			 , #{instMgno}
			 , #{userClCd}
			 , #{lgnId}
			 , #{encptPswd}
			 , #{flnm}
			 , #{deptNm}
			 , #{jbpsNm}
			 , #{telDdd}
			 , #{telTlpno}
			 , #{telPhino}
			 , #{hdponDdd}
			 , #{hdponTlpno}
			 , #{hdponPhino}
			 , #{faxDdd}
			 , #{faxTlpno}
			 , #{faxPhino}
			 , #{emlId}
			 , #{emlAddr}
			 , #{smsNtiYn}
			 , 'ASC0001'
			 , 'N'
			 , #{sUserId}
			 , CURRENT_TIMESTAMP
			 , #{upInstMgno}
			 , 0
			 , 0
			 )
	</insert>
	
	<!-- 로그인 아이디 중복 검색 체크 -->
	<select id="selectLoginIdCnt" resultType="egovMap" parameterType="map">
		/* UserMapper.selectLoginIdCnt */
		SELECT CASE WHEN COUNT(*) > 0 THEN 'N' ELSE 'Y' END AS CHECK_YN
			 , #{lgnId} as LGN_ID
		  FROM USER_BSC
		 WHERE LGN_ID = #{lgnId}
	</select>
	
	<!-- 사용자 계정상태변경 수정하기 -->
	<!-- 사용자 휴대폰번호 수정하기 -->
	<!-- 사용자 비밀번호 수정하기 -->
	<!-- 정보관리 계정담당자 계정상태 수정하기 -->
	<!-- 정보관리 계정담당자 계정구분 수정하기 -->
	<update id="updateUser" parameterType="map">
		/* UserMapper.updateUser */
		UPDATE USER_BSC
		   SET MDFR_ID = #{sUserId}
		     , MDFCN_DT = CURRENT_TIMESTAMP
		<if test='type.equals("acntSttsClCd")'><!-- 계정상태변경 수정하기 -->
		     , ACNT_STTS_CL_CD = #{acntSttsClCd}
		</if>
		<if test='type.equals("userClCd")'><!-- 계정구분 수정하기 -->
		     , USER_CL_CD = #{userClCd}
		</if>
		<if test='type.equals("hdpon")'><!-- 휴대폰번호 수정하기 -->
		     , HDPON_DDD = #{hdponDdd}
		     , HDPON_TLPNO = #{hdponTlpno}
		     , HDPON_PHINO = #{hdponPhino}
		</if>
		<if test='type.equals("encptPswd")'><!-- 비밀번호 수정하기 -->
		     , PSWD = #{encptPswd}
		</if>
		 WHERE USER_ID = #{userId}
	</update>
	
	<!-- Top > 정보수정 - 사용자정보 정보수정하기 -->
	<update id="updateMyUserInfo" parameterType="map">
		/* UserMapper.updateMyUserInfo */
		UPDATE USER_BSC
		   SET MDFR_ID = #{sUserId}
		     , MDFCN_DT = CURRENT_TIMESTAMP
		<if test="afterPassword != null and !afterPassword.equals('')">
		     , PSWD = #{afterPassword}
		</if>
		<if test="afterDeptNm != null and !afterDeptNm.equals('')">
		     , DEPT_NM = #{afterDeptNm}
		</if>
		<if test="afterJbpsNm != null and !afterJbpsNm.equals('')">
		     , JBPS_NM = #{afterJbpsNm}
		</if>
		<if test="afterHdponDdd != null and !afterHdponDdd.equals('')">
		     , HDPON_DDD = #{afterHdponDdd}
		     , HDPON_TLPNO = #{afterHdponTlpno}
		     , HDPON_PHINO = #{afterHdponPhino}
		</if>
		<if test="afterTelDdd != null and !afterTelDdd.equals('')">
		     , TEL_DDD = #{afterTelDdd}
		     , TEL_TLPNO = #{afterTelTlpno}
		     , TEL_PHINO = #{afterTelPhino}
		</if>
		<if test="afterFaxDdd != null and !afterFaxDdd.equals('')">
		     , FAX_DDD = #{afterFaxDdd}
		     , FAX_TLPNO = #{afterFaxTlpno}
		     , FAX_PHINO = #{afterFaxPhino}
		</if>
		<if test="afterEmlId != null and !afterEmlId.equals('')">
		     , EML_ID = #{afterEmlId}
		     , EML_ADDR = #{afterEmlAddr}
		</if>
		 WHERE USER_ID = #{userId}
	</update>
</mapper>
